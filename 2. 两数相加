/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
//基础解法，遍历两个链表进行相应的加法。
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* result= new ListNode;
        ListNode* p =result;
        p->val = (l1->val+l2->val)%10;
        int temp=(l1->val+l2->val)/10;
        l1=l1->next;
        l2=l2->next;
        while(l1!=NULL&&l2!=NULL){
            ListNode* newNode=new ListNode;
            p->next=newNode;
            p=p->next;
            p->val = (l1->val+l2->val+temp)%10;
            temp=(l1->val+l2->val+temp)/10;
            l1=l1->next;
            l2=l2->next;
        }
        while(l1!=NULL){
            ListNode* newNode=new ListNode;
            p->next=newNode;
            p=p->next;
            p->val = (l1->val+temp)%10;
            temp=(l1->val+temp)/10;
            l1=l1->next;
        }
        while(l2!=NULL){
            ListNode* newNode=new ListNode;
            p->next=newNode;
            p=p->next;
            p->val = (l2->val+temp)%10;
            temp=(l2->val+temp)/10;
            l2=l2->next;
        }
        if(temp!=0){
            ListNode* newNode=new ListNode;
            p->next=newNode;
            p=p->next;
            p->val=temp;
        }
        return result;
    }
};
